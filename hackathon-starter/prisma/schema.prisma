// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  createdGames    Game[]               @relation("GameCreator")
  gameResults     GameResultPlayer[]   @relation("GameResultPlayer")

  @@map("users")
}

model Game {
  id        Int      @id @default(autoincrement())
  name      String
  type      String   // 'video_game', 'table_game', 'card_game'
  imageData String?  @map("image_data") // Base64 encoded image
  createdBy Int      @map("created_by")
  createdAt DateTime @default(now()) @map("created_at")

  // Relations
  creator User         @relation("GameCreator", fields: [createdBy], references: [id])
  results GameResult[]

  @@map("games")
}

model GameResult {
  id       Int      @id @default(autoincrement())
  gameId   Int      @map("game_id")
  playedAt DateTime @map("played_at")
  notes    String?
  createdAt DateTime @default(now()) @map("created_at")

  // Relations
  game    Game                 @relation(fields: [gameId], references: [id])
  players GameResultPlayer[]

  @@map("game_results")
}

model GameResultPlayer {
  id           Int     @id @default(autoincrement())
  gameResultId Int     @map("game_result_id")
  userId       Int     @map("user_id")
  score        Float
  isWinner     Boolean @map("is_winner")

  // Relations
  gameResult GameResult @relation(fields: [gameResultId], references: [id])
  user       User       @relation("GameResultPlayer", fields: [userId], references: [id])

  @@unique([gameResultId, userId])
  @@map("game_result_players")
}
